{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "CSSComb Configuration",
    "type": "object",
    "properties": {
      "always-semicolon": {
        "type": "boolean",
        "description": "Whether to add a semicolon after the last value/mixin",
        "examples": [true]
      },
      "block-indent": {
        "oneOf": [
          {
            "type": "integer",
            "minimum": 0,
            "description": "Number of whitespaces for block indentation"
          },
          {
            "type": "string",
            "pattern": "^[ \\t]*$",
            "description": "String of whitespaces/tabs for block indentation"
          }
        ],
        "examples": [4, "  "]
      },
      "color-case": {
        "type": "string",
        "enum": ["lower", "upper"],
        "description": "Unify case of hexadecimal colors"
      },
      "color-shorthand": {
        "type": "boolean",
        "description": "Whether to expand hexadecimal colors or use shorthands",
        "examples": [true, false]
      },
      "element-case": {
        "type": "string",
        "enum": ["lower", "upper"],
        "description": "Unify case of element selectors"
      },
      "eof-newline": {
        "type": "boolean",
        "description": "Add/remove line break at EOF",
        "examples": [true, false]
      },
      "exclude": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List files that should be ignored while combing"
      },
      "leading-zero": {
        "type": "boolean",
        "description": "Add/remove leading zero in dimensions",
        "examples": [true, false]
      },
      "quotes": {
        "type": "string",
        "enum": ["single", "double"],
        "description": "Unify quotes style"
      },
      "remove-empty-rulesets": {
        "type": "boolean",
        "description": "Remove all rulesets that contain nothing but spaces",
        "examples": [true]
      },
      "sort-order": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "string",
              "description": "Name of a CSS property"
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Array of CSS properties for group separation"
            }
          ]
        },
        "description": "Set sort order for properties"
      },
      "sort-order-fallback": {
        "type": "string",
        "enum": ["abc"],
        "description": "Apply a special sort order for properties not specified in sort-order list",
        "examples": ["abc"]
      },
      "space-after-colon": {
        "oneOf": [
          {
            "type": "integer",
            "minimum": 0
          },
          {
            "type": "string"
          }
        ],
        "description": "Set space after ':' in declarations"
      },
      "space-after-combinator": {
        "oneOf": [
          {
            "type": "integer",
            "minimum": 0
          },
          {
            "type": "string"
          }
        ],
        "description": "Set space after combinator in selectors"
      },
      "space-after-opening-brace": {
        "oneOf": [
          {
            "type": "integer",
            "minimum": 0
          },
          {
            "type": "string"
          }
        ],
        "description": "Set space after '{'"
      },
      "space-after-selector-delimiter": {
        "oneOf": [
          {
            "type": "integer",
            "minimum": 0
          },
          {
            "type": "string"
          }
        ],
        "description": "Set space after selector delimiter"
      },
      "space-before-closing-brace": {
        "oneOf": [
          {
            "type": "integer",
            "minimum": 0
          },
          {
            "type": "string"
          }
        ],
        "description": "Set space before '}'"
      },
      "space-before-colon": {
        "oneOf": [
          {
            "type": "integer",
            "minimum": 0
          },
          {
            "type": "string"
          }
        ],
        "description": "Set space before ':' in declarations"
      },
      "space-before-combinator": {
        "oneOf": [
          {
            "type": "integer",
            "minimum": 0
          },
          {
            "type": "string"
          }
        ],
        "description": "Set space before combinator in selectors"
      },
      "space-before-opening-brace": {
        "oneOf": [
          {
            "type": "integer",
            "minimum": 0
          },
          {
            "type": "string"
          }
        ],
        "description": "Set space before '{'"
      },
      "space-before-selector-delimiter": {
        "oneOf": [
          {
            "type": "integer",
            "minimum": 0
          },
          {
            "type": "string"
          }
        ],
        "description": "Set space before selector delimiter"
      },
      "strip-spaces": {
        "type": "boolean",
        "description": "Whether to trim trailing spaces",
        "examples": [true]
      },
      "tab-size": {
        "type": "integer",
        "minimum": 0,
        "description": "Set tab size (number of spaces to replace hard tabs)"
      },
      "unitless-zero": {
        "type": "boolean",
        "description": "Whether to remove units in zero-valued dimensions",
        "examples": [true]
      },
      "vendor-prefix-align": {
        "type": "boolean",
        "description": "Whether to align vendor prefixes in properties and values",
        "examples": [true]
      },
      "lines-between-rulesets": {
        "type": "integer",
        "minimum": 0,
        "description": "Number of line breaks between rulesets or @rules"
      },
      "verbose": {
        "type": "boolean",
        "description": "Whether to use verbose option in CLI",
        "examples": [true]
      }
    },
    "additionalProperties": false
  }
  